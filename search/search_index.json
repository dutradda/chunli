{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"chunli Distributed load test application Documentation : https://dutradda.github.io/chunli Source Code : https://github.com/dutradda/chunli Key Features Distributed load test application Receive file with urls Receive file with json lines Receive python scripts * * feature in development. Requirements Python 3.8+ Instalation $ pip install chunli Basic Example Running the server (needs uvicorn installed ): uvicorn chunli:app Create chunli's input file (needs gzip installed ): echo http://localhost:8001/hello | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job (needs curl installed ): curl -X POST \\ -i 'http://localhost:8000/run?duration=3&rps_per_node=1' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 5 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Ramp-up Example Running the server uvicorn chunli:app Create chunli's input file: echo http://localhost:8001/hello | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=10&rps_per_node=10&rampup_time=5' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 12 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":10.0,\"rampup_time\":5,\"requested_rps_per_node\":10.0,\"realized_requests\":73.0,\"realized_rps\":7.3,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Json Lines Example Running the server: uvicorn chunli:app Create chunli's input file: echo '{\"url\":\"http://localhost:8001/hello\"} {\"url\":\"http://localhost:8001/hello\",\"method\":\"GET\"}' \\ | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=1&rps_per_node=10' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Json Array Lines Example Running the server: uvicorn chunli:app Create chunli's input file: echo '[{\"url\":\"http://localhost:8001/hello\"}] [{\"url\":\"http://localhost:8001/hello\",\"method\":\"GET\"}] ' \\ | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=1&rps_per_node=10' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Python Script Example Running the server: uvicorn chunli:app Create chunli's input script: # /tmp/get_calls_block.py from typing import Generator from chunli.call import Call global get_calls_block def get_calls_block () -> Generator [ Call , None , None ]: yield Call ( url = 'http://localhost:8001/hello' , method = 'GET' , headers = None , body = None , ) Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/script?duration=1&rps_per_node=10' \\ --upload-file /tmp/get_calls_block.py HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/script?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null} Python Script With Body Example Running the server: uvicorn chunli:app Create chunli's input script: # /tmp/get_calls_block_body.py from typing import Generator from chunli.call import Call global get_calls_block def get_calls_block () -> Generator [ Call , None , None ]: yield Call ( url = 'http://localhost:8001/hello-body' , method = 'POST' , headers = None , body = { 'name' : 'Me!' }, ) Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/script?duration=1&rps_per_node=10' \\ --upload-file /tmp/get_calls_block_body.py HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/script?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null}","title":"chunli"},{"location":"#chunli","text":"Distributed load test application Documentation : https://dutradda.github.io/chunli Source Code : https://github.com/dutradda/chunli","title":"chunli"},{"location":"#key-features","text":"Distributed load test application Receive file with urls Receive file with json lines Receive python scripts * * feature in development.","title":"Key Features"},{"location":"#requirements","text":"Python 3.8+","title":"Requirements"},{"location":"#instalation","text":"$ pip install chunli","title":"Instalation"},{"location":"#basic-example","text":"Running the server (needs uvicorn installed ): uvicorn chunli:app Create chunli's input file (needs gzip installed ): echo http://localhost:8001/hello | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job (needs curl installed ): curl -X POST \\ -i 'http://localhost:8000/run?duration=3&rps_per_node=1' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 5 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null}","title":"Basic Example"},{"location":"#ramp-up-example","text":"Running the server uvicorn chunli:app Create chunli's input file: echo http://localhost:8001/hello | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=10&rps_per_node=10&rampup_time=5' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 12 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":10.0,\"rampup_time\":5,\"requested_rps_per_node\":10.0,\"realized_requests\":73.0,\"realized_rps\":7.3,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null}","title":"Ramp-up Example"},{"location":"#json-lines-example","text":"Running the server: uvicorn chunli:app Create chunli's input file: echo '{\"url\":\"http://localhost:8001/hello\"} {\"url\":\"http://localhost:8001/hello\",\"method\":\"GET\"}' \\ | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=1&rps_per_node=10' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null}","title":"Json Lines Example"},{"location":"#json-array-lines-example","text":"Running the server: uvicorn chunli:app Create chunli's input file: echo '[{\"url\":\"http://localhost:8001/hello\"}] [{\"url\":\"http://localhost:8001/hello\",\"method\":\"GET\"}] ' \\ | gzip > /tmp/hello-call.gz zcat /tmp/hello-call.gz Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/run?duration=1&rps_per_node=10' \\ --upload-file /tmp/hello-call.gz HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/run?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"73b40a62fb5e\",\"args_signature\":null}","title":"Json Array Lines Example"},{"location":"#python-script-example","text":"Running the server: uvicorn chunli:app Create chunli's input script: # /tmp/get_calls_block.py from typing import Generator from chunli.call import Call global get_calls_block def get_calls_block () -> Generator [ Call , None , None ]: yield Call ( url = 'http://localhost:8001/hello' , method = 'GET' , headers = None , body = None , ) Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/script?duration=1&rps_per_node=10' \\ --upload-file /tmp/get_calls_block.py HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/script?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null}","title":"Python Script Example"},{"location":"#python-script-with-body-example","text":"Running the server: uvicorn chunli:app Create chunli's input script: # /tmp/get_calls_block_body.py from typing import Generator from chunli.call import Call global get_calls_block def get_calls_block () -> Generator [ Call , None , None ]: yield Call ( url = 'http://localhost:8001/hello-body' , method = 'POST' , headers = None , body = { 'name' : 'Me!' }, ) Start chunli's job: curl -X POST \\ -i 'http://localhost:8000/script?duration=1&rps_per_node=10' \\ --upload-file /tmp/get_calls_block_body.py HTTP/1.1 100 Continue HTTP/1.1 202 Accepted date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 159 {\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"running\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null} Gets chunli's job results: sleep 3 && \\ curl -i 'http://localhost:8000/script?task_id=4ee301eb-6487-48a0-b6ed-e5f576accfc2' HTTP/1.0 200 OK date: Thu, 1st January 1970 00:00:00 GMT server: uvicorn content-type: application/json content-length: 409 {\"end_time\":\"1970-01-01T00:00:00+00:00\",\"result\":{\"duration\":1.0,\"rampup_time\":0,\"requested_rps_per_node\":1.0,\"realized_requests\":1.0,\"realized_rps\":1.0,\"latency\":{\"mean\":1.0,\"median\":1.0,\"percentile99\":1.0,\"percentile95\":1.0},\"error\":null,\"nodes_quantity\":1,\"errors_count\":0},\"task_id\":\"4ee301eb-6487-48a0-b6ed-e5f576accfc2\",\"start_time\":\"1970-01-01T00:00:00+00:00\",\"status\":\"finished\",\"signature\":\"0ecc7ebf73bc\",\"args_signature\":null}","title":"Python Script With Body Example"},{"location":"changelog/","text":"CHANGELOG 0.11.3 - 2020-09-03 Replace requests to httpx 0.11.2 - 2020-09-03 Fix wait_call function 0.11.1 - 2020-09-03 Improve caller 0.11.0 - 2020-09-03 Create ramp-up feature 0.10.5 - 2020-05-08 Fix tests for new apidaora version 0.10.4 - 2020-04-14 Update tests for new apidaora version 0.10.3 - 2020-04-14 Update tests for new apidaora version 0.10.2 - 2020-04-13 Fix new apidaora interface 0.10.1 - 2020-04-12 Fix tests for new apidaora version 0.10.0 - 2020-03-06 Move the Call class to a isolated module 0.9.0 - 2020-03-06 Improve Caller to do synchronous calls when the calls are in blocks 0.8.0 - 2020-03-06 Support body on calls Fix run calls with python script 0.7.0 - 2020-03-06 Add support to run the calls with a python script 0.6.0 - 2020-03-06 Add support for make calls in block 0.5.2 - 2020-02-27 Update requirements Fix config class 0.5.1 - 2020-02-27 Fix rps_per_node calculation 0.5.0 - 2019-11-08 Add status endpoint Fix caller inputs management 0.4.2 - 2019-11-08 Fix background caller, but needs gunicorn 0.4.1 - 2019-11-07 Skip errors on background caller 0.4.0 - 2019-11-07 Skip errors and count them 0.3.0 - 2019-11-07 Add support for multiple workers 0.2.1 - 2019-11-07 Fix requirements 0.2.0 - 2019-11-07 Add support for distribution calls 0.1.0 - 2019-11-04 Create first version of the application","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"CHANGELOG"},{"location":"changelog/#0113-2020-09-03","text":"Replace requests to httpx","title":"0.11.3 - 2020-09-03"},{"location":"changelog/#0112-2020-09-03","text":"Fix wait_call function","title":"0.11.2 - 2020-09-03"},{"location":"changelog/#0111-2020-09-03","text":"Improve caller","title":"0.11.1 - 2020-09-03"},{"location":"changelog/#0110-2020-09-03","text":"Create ramp-up feature","title":"0.11.0 - 2020-09-03"},{"location":"changelog/#0105-2020-05-08","text":"Fix tests for new apidaora version","title":"0.10.5 - 2020-05-08"},{"location":"changelog/#0104-2020-04-14","text":"Update tests for new apidaora version","title":"0.10.4 - 2020-04-14"},{"location":"changelog/#0103-2020-04-14","text":"Update tests for new apidaora version","title":"0.10.3 - 2020-04-14"},{"location":"changelog/#0102-2020-04-13","text":"Fix new apidaora interface","title":"0.10.2 - 2020-04-13"},{"location":"changelog/#0101-2020-04-12","text":"Fix tests for new apidaora version","title":"0.10.1 - 2020-04-12"},{"location":"changelog/#0100-2020-03-06","text":"Move the Call class to a isolated module","title":"0.10.0 - 2020-03-06"},{"location":"changelog/#090-2020-03-06","text":"Improve Caller to do synchronous calls when the calls are in blocks","title":"0.9.0 - 2020-03-06"},{"location":"changelog/#080-2020-03-06","text":"Support body on calls Fix run calls with python script","title":"0.8.0 - 2020-03-06"},{"location":"changelog/#070-2020-03-06","text":"Add support to run the calls with a python script","title":"0.7.0 - 2020-03-06"},{"location":"changelog/#060-2020-03-06","text":"Add support for make calls in block","title":"0.6.0 - 2020-03-06"},{"location":"changelog/#052-2020-02-27","text":"Update requirements Fix config class","title":"0.5.2 - 2020-02-27"},{"location":"changelog/#051-2020-02-27","text":"Fix rps_per_node calculation","title":"0.5.1 - 2020-02-27"},{"location":"changelog/#050-2019-11-08","text":"Add status endpoint Fix caller inputs management","title":"0.5.0 - 2019-11-08"},{"location":"changelog/#042-2019-11-08","text":"Fix background caller, but needs gunicorn","title":"0.4.2 - 2019-11-08"},{"location":"changelog/#041-2019-11-07","text":"Skip errors on background caller","title":"0.4.1 - 2019-11-07"},{"location":"changelog/#040-2019-11-07","text":"Skip errors and count them","title":"0.4.0 - 2019-11-07"},{"location":"changelog/#030-2019-11-07","text":"Add support for multiple workers","title":"0.3.0 - 2019-11-07"},{"location":"changelog/#021-2019-11-07","text":"Fix requirements","title":"0.2.1 - 2019-11-07"},{"location":"changelog/#020-2019-11-07","text":"Add support for distribution calls","title":"0.2.0 - 2019-11-07"},{"location":"changelog/#010-2019-11-04","text":"Create first version of the application","title":"0.1.0 - 2019-11-04"},{"location":"contributing/","text":"Starting Development git clone git@github.com:dutradda/chunli.git --recursive cd chunli make setup-python-virtualenv source venv/bin/activate make setup-python-project bake setup-chunli bake dependencies Running the integration suite: bake integration Other bake tasks: bake check-code bake tests-docs bake serve-docs bake add-changelog m = \"Add my cool feature\" You can run bake to see all tasks available.","title":"Development - Contributing"},{"location":"contributing/#starting-development","text":"git clone git@github.com:dutradda/chunli.git --recursive cd chunli make setup-python-virtualenv source venv/bin/activate make setup-python-project bake setup-chunli bake dependencies","title":"Starting Development"},{"location":"contributing/#running-the-integration-suite","text":"bake integration","title":"Running the integration suite:"},{"location":"contributing/#other-bake-tasks","text":"bake check-code bake tests-docs bake serve-docs bake add-changelog m = \"Add my cool feature\" You can run bake to see all tasks available.","title":"Other bake tasks:"}]}